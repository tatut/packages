/**********************************************************************
 * Extern for ReactTransitionGroup
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var ReactTransitionGroup = {
    "CSSTransition": {
        "propTypes": {
            "addEndListener": {
                "isRequired": function () {}
            },
            "appear": {
                "isRequired": function () {}
            },
            "children": function () {},
            "classNames": {
                "isRequired": function () {}
            },
            "enter": {
                "isRequired": function () {}
            },
            "exit": {
                "isRequired": function () {}
            },
            "in": {
                "isRequired": function () {}
            },
            "mountOnEnter": {
                "isRequired": function () {}
            },
            "onEnter": {
                "isRequired": function () {}
            },
            "onEntered": {
                "isRequired": function () {}
            },
            "onEntering": {
                "isRequired": function () {}
            },
            "onExit": {
                "isRequired": function () {}
            },
            "onExited": {
                "isRequired": function () {}
            },
            "onExiting": {
                "isRequired": function () {}
            },
            "timeout": function () {},
            "unmountOnExit": {
                "isRequired": function () {}
            }
        }
    },
    "ReplaceTransition": {
        "propTypes": {
            "children": function () {},
            "in": function () {}
        }
    },
    "Transition": {
        "ENTERED": {},
        "ENTERING": {},
        "EXITED": {},
        "EXITING": {},
        "UNMOUNTED": {},
        "childContextTypes": {
            "transitionGroup": function () {}
        },
        "contextTypes": {
            "transitionGroup": {
                "isRequired": function () {}
            }
        },
        "defaultProps": {
            "appear": {},
            "enter": {},
            "exit": {},
            "in": {},
            "mountOnEnter": {},
            "onEnter": function () {},
            "onEntered": function () {},
            "onEntering": function () {},
            "onExit": function () {},
            "onExited": function () {},
            "onExiting": function () {},
            "unmountOnExit": {}
        },
        "propTypes": {
            "addEndListener": {
                "isRequired": function () {}
            },
            "appear": {
                "isRequired": function () {}
            },
            "children": function () {},
            "enter": {
                "isRequired": function () {}
            },
            "exit": {
                "isRequired": function () {}
            },
            "in": {
                "isRequired": function () {}
            },
            "mountOnEnter": {
                "isRequired": function () {}
            },
            "onEnter": {
                "isRequired": function () {}
            },
            "onEntered": {
                "isRequired": function () {}
            },
            "onEntering": {
                "isRequired": function () {}
            },
            "onExit": {
                "isRequired": function () {}
            },
            "onExited": {
                "isRequired": function () {}
            },
            "onExiting": {
                "isRequired": function () {}
            },
            "timeout": function () {},
            "unmountOnExit": {
                "isRequired": function () {}
            }
        }
    },
    "TransitionGroup": {
        "childContextTypes": {
            "transitionGroup": function () {}
        },
        "defaultProps": {
            "childFactory": function () {},
            "component": {}
        },
        "propTypes": {
            "appear": {
                "isRequired": function () {}
            },
            "childFactory": {
                "isRequired": function () {}
            },
            "children": {
                "isRequired": function () {}
            },
            "component": {
                "isRequired": function () {}
            },
            "enter": {
                "isRequired": function () {}
            },
            "exit": {
                "isRequired": function () {}
            }
        }
    }
};
ReactTransitionGroup.CSSTransition.prototype = {
    "forceUpdate": function () {},
    "isReactComponent": function () {},
    "reflowAndAddClass": function () {},
    "removeClasses": function () {},
    "render": function () {},
    "setState": function () {}
};
ReactTransitionGroup.ReplaceTransition.prototype = {
    "forceUpdate": function () {},
    "handleLifecycle": function () {},
    "isReactComponent": function () {},
    "render": function () {},
    "setState": function () {}
};
ReactTransitionGroup.Transition.prototype = {
    "cancelNextCallback": function () {},
    "componentDidMount": function () {},
    "componentDidUpdate": function () {},
    "componentWillReceiveProps": function () {},
    "componentWillUnmount": function () {},
    "forceUpdate": function () {},
    "getChildContext": function () {},
    "getTimeouts": function () {},
    "isReactComponent": function () {},
    "onTransitionEnd": function () {},
    "performEnter": function () {},
    "performExit": function () {},
    "render": function () {},
    "safeSetState": function () {},
    "setNextCallback": function () {},
    "setState": function () {},
    "updateStatus": function () {}
};
ReactTransitionGroup.TransitionGroup.prototype = {
    "componentDidMount": function () {},
    "componentWillReceiveProps": function () {},
    "forceUpdate": function () {},
    "getChildContext": function () {},
    "getProp": function () {},
    "handleExited": function () {},
    "isReactComponent": function () {},
    "render": function () {},
    "setState": function () {}
};
/**********************************************************************
 * End Generated Extern for ReactTransitionGroup
/**********************************************************************/
